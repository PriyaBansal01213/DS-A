/* Program to find richest person*/
#include<iostream>
using namespace std;
int rich(int arr[100][100], int r, int c){
int max=0, sum=0,cust=0,i,j;
	for(i=0;i<r;i++){
		for(j=0;j<c;j++){
			sum  = sum + arr[i][j];
		}
		if(max<sum){
			max = sum;
			cust=i+1;
		}
	}
	return cust;
}	

int main(){
	int r,c,i,j,arr[100][100];
	cin>>r>>c;
	for(i=0;i<r;i++){
		for(j=0;j<c;j++){
			cin>>arr[i][j];
		}
	}
	int k = rich(arr,r,c);
	cout<<k;
	return 0;
}

/* Program to find union and intersection of two arrays*/
#include<iostream>
#include<set>
using namespace std;
void intersection(int a[100], int b[100], int n , int m){
	int i=0,j=0;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			if(a[i]==b[j]){
				cout<<a[i]<<" ";
			}
		}
	}
}
void unions(int a[100], int b[100], int n , int m){
	int i=0,j=0;
	set <int> s;
	while(i<n){
		s.insert(a[i]);
		i++;
	}
	while(j<m){
		s.insert(b[j]);
		j++;
	}
	cout<<"\n";
	set<int>::iterator it;
	for(it=s.begin(); it!=s.end();it++){
		cout<<*it<<" ";
	}
}
int main(){
	int i,n,m,arr1[100],arr2[100];
	cin>>n>>m;
	for(i=0;i<n;i++){
		cin>>arr1[i];
	}
	for(i=0;i<m;i++){
		cin>>arr2[i];
	}
	intersection(arr1,arr2,n,m);
	unions(arr1, arr2, n,m);
	return 0;
}
/* Program to add extra toffee */
#include<iostream>
using namespace std;
void highest(int arr[100], int n, int e){
	bool a[n];
	int max=arr[0], i;
	for( i=1;i<n;i++){
		if(arr[i]>max){
			max=arr[i];
		}
	}
	for(i=0;i<n;i++){
		if((arr[i]+e)>=max){
			a[i]= true;
		}
		else {
			a[i]= false;
		}
	}
	for(i=0;i<n;i++){
		cout<<a[i];
	}	
}
int main(){
	int i,n,arr[100],extra;
	cin>>n;
	for(i=0;i<n;i++){
		cin>>arr[i];
	}
	cin>>extra;
	highest(arr,n,extra);
	return 0; 
}
/*Program to print good pair( num[i]==num[j], i<j)*/
#include<iostream>
using namespace std;
int good_pair(int arr[100], int n){
	int i,j,c=0;
	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(arr[i]==arr[j]){
				c++;
			}	
		}
	}
	return c;
}
int main(){
	int n,arr[100],i;
	cin>>n;
	for(i=0;i<n;i++){
		cin>>arr[i];
	}
	int k = good_pair(arr,n);
	cout<<k;
	return 0;
}	
